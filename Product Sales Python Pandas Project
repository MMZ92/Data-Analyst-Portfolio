# Importing libraries:

import numpy as np
import pandas as pd
import os


# Concatenating files:

all_months_data=pd.DataFrame()

for file in files:
    df=pd.read_csv("./Sales_Data/"+file)
    all_months_data = pd.concat([all_months_data,df])
    
all_months_data.to_csv("all_data.csv",index=False)


# Checking columns which have null values:

all_months_data.isnull().any()


# Get a concise overview of the DataFrame

all_months_data.info(memory_usage='deep')


# Drop rows with null values:

all_months_data=all_months_data.dropna(how='all')


# Add month column:

all_months_data["month"]=all_months_data["Order Date"].str.split(pat="/").str[0].astype("int")


# Change data type of "Quantity Ordered" column:

all_months_data["Quantity Ordered"]=all_months_data["Quantity Ordered"].astype("int")


# Change data type of "Price Each" column:

all_months_data["Price Each"]=all_months_data["Price Each"].astype("float")


# Add a sales column:

all_months_data["Sales"]=all_months_data["Quantity Ordered"]*all_months_data["Price Each"]



# Plot a bar chart showing Sales(USD) by month

import matplotlib.pyplot as plt

results= all_months_data.groupby("month").sum()

months = range(1,13)

plt.bar(months,results['Sales'])

plt.xticks(months)

plt.ticklabel_format(axis='y', style='plain')

plt.ylabel("Sales in USD($)")

plt.xlabel('Month Number')

plt.show()

# Most product sales occured in December as people buy gifts for Christmas and many stores have Christmas and New Year sales.


# Define functions to get City and State:

def get_city(address):
    return address.split(',')[1]

def get_state(address):
    return address.split(',')[2].split(' ')[1]


# Add city column:

all_months_data['City']=all_months_data['Purchase Address'].apply(lambda x: get_city(x) + ' '+get_state(x))


# Plotting Sales(USD) by City:

results= all_months_data.groupby("City").sum()

cities= [city for city,df in all_months_data.groupby('City')]

plt.bar(cities,results['Sales'])

plt.xticks(cities,rotation='vertical',size=8)

plt.ticklabel_format(axis='y', style='plain')

plt.ylabel("Sales in USD($)")

plt.xlabel('City')

plt.show()

# San Franciso had the most sales


# Changing data type of "Order Date" column:

all_months_data["Order Date"] = pd.to_datetime(all_months_data['Order Date'])


# Adding hour and minute columns:

all_months_data['Hour'] = all_months_data['Order Date'].dt.hour
all_months_data['Minute'] = all_months_data['Order Date'].dt.minute


# Plotting Number of orders vs hour of day:

hours= [hour for hour,df in all_months_data.groupby('Hour')]

plt.plot(hours,all_months_data.groupby(['Hour']).count())

plt.xticks(hours)
plt.xlabel("Hours")
plt.ylabel("Number of orders")
plt.grid()
plt.show()

# Most orders are places at noon and in the evening.



df=all_months_data[all_months_data["Order ID"].duplicated(keep=False)]

df["Grouped"]=df.groupby('Order ID')['Product'].transform(lambda x: ','.join(x))



# Dropping duplicates

df=df[["Order ID","Grouped"]].drop_duplicates()




# Plotting quantity ordered by Product

product_group=all_months_data.groupby('Product')

quantity_ordered=product_group.sum()['Quantity Ordered']

products= [product for product, df in product_group]

plt.bar(products, quantity_ordered)

plt.ylabel("Quantity Ordered")

plt.xlabel('Product')

plt.xticks(products,rotation='vertical',size=8)


plt.show()


# Plotting Price as well as Orders Placed for products

prices=all_months_data.groupby('Product').mean()['Price Each']

fig, ax1 = plt.subplots()

ax2 = ax1.twinx()
# ax1.plot(products, y1, 'g-')
ax1.bar(products,quantity_ordered,color='g')
ax2.plot(products, prices, 'b-')

ax1.set_xlabel('Product Name')
ax1.set_ylabel('Quantity Ordered', color='g')
ax2.set_ylabel('Price ($)', color='b')
ax1.set_xticklabels(products,rotation='vertical',size=8)

plt.show()

# The plot shows that generally higher priced items have less orders and lower priced consumable items 
# (e.g. batteries) have more orders.
